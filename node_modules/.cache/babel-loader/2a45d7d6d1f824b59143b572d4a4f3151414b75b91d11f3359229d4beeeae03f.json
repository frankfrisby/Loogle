{"ast":null,"code":"/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}","map":{"version":3,"names":["isPromise","obj","then","PROMISE_RESOLVED_FALSE","Promise","resolve","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","res","setTimeout","randomInt","min","max","Math","floor","random","randomToken","toString","substring","lastMs","additional","microSeconds","ms","Date","getTime"],"sources":["C:/Users/frank/node_modules/broadcast-channel/dist/esbrowser/util.js"],"sourcesContent":["/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,SAAS,CAACC,GAAG,EAAE;EAC7B,OAAOA,GAAG,IAAI,OAAOA,GAAG,CAACC,IAAI,KAAK,UAAU;AAC9C;AACA,OAAO,IAAIC,sBAAsB,GAAGC,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;AAC1D,OAAO,IAAIC,qBAAqB,GAAGF,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AACxD,OAAO,IAAIE,qBAAqB,GAAGH,OAAO,CAACC,OAAO,EAAE;AACpD,OAAO,SAASG,KAAK,CAACC,IAAI,EAAEC,WAAW,EAAE;EACvC,IAAI,CAACD,IAAI,EAAEA,IAAI,GAAG,CAAC;EACnB,OAAO,IAAIL,OAAO,CAAC,UAAUO,GAAG,EAAE;IAChC,OAAOC,UAAU,CAAC,YAAY;MAC5B,OAAOD,GAAG,CAACD,WAAW,CAAC;IACzB,CAAC,EAAED,IAAI,CAAC;EACV,CAAC,CAAC;AACJ;AACA,OAAO,SAASI,SAAS,CAACC,GAAG,EAAEC,GAAG,EAAE;EAClC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;AAEA;AACA;AACA;AACA,OAAO,SAASK,WAAW,GAAG;EAC5B,OAAOH,IAAI,CAACE,MAAM,EAAE,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;AAChD;AACA,IAAIC,MAAM,GAAG,CAAC;AACd,IAAIC,UAAU,GAAG,CAAC;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAY,GAAG;EAC7B,IAAIC,EAAE,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;EAC7B,IAAIF,EAAE,KAAKH,MAAM,EAAE;IACjBC,UAAU,EAAE;IACZ,OAAOE,EAAE,GAAG,IAAI,GAAGF,UAAU;EAC/B,CAAC,MAAM;IACLD,MAAM,GAAGG,EAAE;IACXF,UAAU,GAAG,CAAC;IACd,OAAOE,EAAE,GAAG,IAAI;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}