{"ast":null,"code":"import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE } from './util.js';\nimport { add as unloadAdd } from 'unload';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this.hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this.hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this.hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2.hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return _sendMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return _sendMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return _sendMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n\n/**\n * sends and internal message over the broadcast-channel\n */\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector.hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return _sendMessage(leaderElector, 'tell');\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}","map":{"version":3,"names":["sleep","randomToken","PROMISE_RESOLVED_VOID","PROMISE_RESOLVED_TRUE","add","unloadAdd","LeaderElection","broadcastChannel","options","_this","_options","isLeader","hasLeader","isDead","token","_aplQ","_aplQC","_unl","_lstns","_dpL","_dpLC","hasLeaderListener","msg","context","action","addEventListener","push","prototype","applyOnce","isFromFallbackInterval","_this2","applyRun","stopCriteria","stopCriteriaPromiseResolve","stopCriteriaPromise","Promise","res","handleMessage","waitForAnswerTime","responseTime","_sendMessage","then","race","reject","Error","removeEventListener","beLeader","awaitLeadership","_aLP","_awaitLeadershipOnce","onduplicate","fn","die","_this3","forEach","listener","uFn","remove","leaderElector","resolved","finish","whenDeathListener","tryOnFallBack","fallbackInterval","msgJson","postInternal","unloadFn","isLeaderListener","fillOptionsWithDefaults","channel","JSON","parse","stringify","method","averageResponseTime","createLeaderElection","_leaderElector","elector","_befC"],"sources":["C:/Users/frank/node_modules/broadcast-channel/dist/esbrowser/leader-election.js"],"sourcesContent":["import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE } from './util.js';\nimport { add as unloadAdd } from 'unload';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this.hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this.hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this.hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2.hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return _sendMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return _sendMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return _sendMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n\n/**\n * sends and internal message over the broadcast-channel\n */\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector.hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return _sendMessage(leaderElector, 'tell');\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}